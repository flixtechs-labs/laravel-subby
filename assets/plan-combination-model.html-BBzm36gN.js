import{_ as l,r as i,c as p,a as n,d as s,w as t,e as a,b as c,o as u}from"./app-Vnr7Qnzh.js";const r={},d=n("h1",{id:"plan-combination-model",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plan-combination-model"},[n("span",null,"Plan Combination Model")])],-1),b={class:"table-of-contents"},m=c(`<p>With this model you define your plan combinations. You can have multiple prices and intervals per currency, country, etc.</p><h2 id="create-a-plan-combination" tabindex="-1"><a class="header-anchor" href="#create-a-plan-combination"><span>Create a Plan Combination</span></a></h2><p>Combinations must be unique for <code>country</code>, <code>currency</code>, <code>invoice_period</code> and <code>invoice_interval</code>.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token keyword">use</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>Plan</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>PlanCombination</span><span class="token punctuation">;</span>

<span class="token variable">$plan</span> <span class="token operator">=</span> <span class="token class-name static-context">Plan</span><span class="token operator">::</span><span class="token function">getByTag</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;basic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$plan</span><span class="token operator">-&gt;</span><span class="token function">combinations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;tag&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;basic-es-eur-1-year&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;country&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;ESP&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;currency&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;EUR&#39;</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;price&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">99.99</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;invoice_period&#39;</span> <span class="token operator">=&gt;</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string single-quoted-string">&#39;invoice_interval&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;year&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="get-plan-combination-details" tabindex="-1"><a class="header-anchor" href="#get-plan-combination-details"><span>Get Plan Combination details</span></a></h2><p>You can query the plan combination for further details as follows:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$planCombination</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanCombination</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or querying by tag</span>
<span class="token variable">$planCombination</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanCombination</span><span class="token operator">::</span><span class="token function">getByTag</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;basic-es-eur-1-year&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Or do your own query</span>
<span class="token variable">$plan</span> <span class="token operator">=</span> <span class="token class-name static-context">Plan</span><span class="token operator">::</span><span class="token function">getByTag</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;basic&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$planCombination</span> <span class="token operator">=</span> <span class="token variable">$plan</span><span class="token operator">-&gt;</span><span class="token function">combinations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;country&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;ESP&#39;</span><span class="token punctuation">)</span>
                                        <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;currency&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;EUR&#39;</span><span class="token punctuation">)</span>
                                        <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;invoice_period&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
                                        <span class="token operator">-&gt;</span><span class="token function">where</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;invoice_interval&#39;</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;year&#39;</span><span class="token punctuation">)</span>
                                        <span class="token operator">-&gt;</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get parent plan                </span>
<span class="token variable">$planCombination</span><span class="token operator">-&gt;</span><span class="token property">plan</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subscribe-to-plan-combination" tabindex="-1"><a class="header-anchor" href="#subscribe-to-plan-combination"><span>Subscribe to plan combination</span></a></h2>`,8),k=n("code",null,"PlanCombination",-1),g=n("code",null,"Plan",-1),h=n("h2",{id:"change-subscription-s-plan-to-plan-combination",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#change-subscription-s-plan-to-plan-combination"},[n("span",null,"Change subscription's plan to plan combination")])],-1),v=n("code",null,"PlanCombination",-1),_=n("code",null,"Plan",-1),f=n("h2",{id:"schedule-subscription-s-plan-change-to-plan-combination",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#schedule-subscription-s-plan-change-to-plan-combination"},[n("span",null,"Schedule subscription's plan change to plan combination")])],-1),y=n("code",null,"PlanCombination",-1),C=n("code",null,"Plan",-1);function q(x,P){const e=i("router-link"),o=i("RouteLink");return u(),p("div",null,[d,n("nav",b,[n("ul",null,[n("li",null,[s(e,{to:"#create-a-plan-combination"},{default:t(()=>[a("Create a Plan Combination")]),_:1})]),n("li",null,[s(e,{to:"#get-plan-combination-details"},{default:t(()=>[a("Get Plan Combination details")]),_:1})]),n("li",null,[s(e,{to:"#subscribe-to-plan-combination"},{default:t(()=>[a("Subscribe to plan combination")]),_:1})]),n("li",null,[s(e,{to:"#change-subscription-s-plan-to-plan-combination"},{default:t(()=>[a("Change subscription's plan to plan combination")]),_:1})]),n("li",null,[s(e,{to:"#schedule-subscription-s-plan-change-to-plan-combination"},{default:t(()=>[a("Schedule subscription's plan change to plan combination")]),_:1})])])]),m,n("p",null,[a("See "),s(o,{to:"/v7.x/models/plan-subscription-model.html#create-a-subscription"},{default:t(()=>[a("create a Subscription")]),_:1}),a(" and use a "),k,a(" instead of a "),g,a(".")]),h,n("p",null,[a("See "),s(o,{to:"/v7.x/models/plan-subscription-model.html#change-its-plan"},{default:t(()=>[a("change its plan")]),_:1}),a(" and use a "),v,a(" instead of a "),_,a(".")]),f,n("p",null,[a("See "),s(o,{to:"/v7.x/models/plan-subscription-schedule-model.html#create-schedule"},{default:t(()=>[a("create schedule")]),_:1}),a(" and use a "),y,a(" instead of a "),C,a(".")])])}const w=l(r,[["render",q],["__file","plan-combination-model.html.vue"]]),$=JSON.parse(`{"path":"/v7.x/models/plan-combination-model.html","title":"Plan Combination Model","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Create a Plan Combination","slug":"create-a-plan-combination","link":"#create-a-plan-combination","children":[]},{"level":2,"title":"Get Plan Combination details","slug":"get-plan-combination-details","link":"#get-plan-combination-details","children":[]},{"level":2,"title":"Subscribe to plan combination","slug":"subscribe-to-plan-combination","link":"#subscribe-to-plan-combination","children":[]},{"level":2,"title":"Change subscription's plan to plan combination","slug":"change-subscription-s-plan-to-plan-combination","link":"#change-subscription-s-plan-to-plan-combination","children":[]},{"level":2,"title":"Schedule subscription's plan change to plan combination","slug":"schedule-subscription-s-plan-change-to-plan-combination","link":"#schedule-subscription-s-plan-change-to-plan-combination","children":[]}],"git":{"updatedTime":1716242914000,"contributors":[{"name":"Borja Puig","email":"bdpuig@gmail.com","commits":1},{"name":"Given Ncube","email":"givenyslim12@gmail.com","commits":1}]},"filePathRelative":"v7.x/models/plan-combination-model.md"}`);export{w as comp,$ as data};
