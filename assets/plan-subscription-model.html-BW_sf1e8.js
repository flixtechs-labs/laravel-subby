import{_ as c,r as p,c as l,a as n,d as a,w as e,e as s,b as i,o as r}from"./app-Vnr7Qnzh.js";const u={},d=n("h1",{id:"plan-subscription-model",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#plan-subscription-model"},[n("span",null,"Plan Subscription Model")])],-1),k={class:"table-of-contents"},b=i('<h2 id="create-a-subscription" tabindex="-1"><a class="header-anchor" href="#create-a-subscription"><span>Create a Subscription</span></a></h2><div class="custom-container tip"><p class="custom-container-title">New in v6.0</p><p><code>newSubscription</code> accepts a <code>PlanCombination</code> as second argument <code>newSubscription</code> accepts sixth argument: Payment Method</p></div><p>You can subscribe a user (or any model correctly traited) to a plan by using the <code>newSubscription()</code> function available in the <code>HasSubscriptions</code> trait. First, retrieve an instance of your subscriber&#39;s model, which typically will be your user model and an instance of the plan your subscriber is subscribing to. Once you have retrieved the model instance, you may use the <code>newSubscription</code> method to create the model&#39;s subscription.</p><p>The subscription is made as a <em>snapshot</em> using current plan details as a template. Same happens with subscription features. When you create a subscription a copy of the Plan Features is made into your Plan Subscription Features.</p>',4),g=i(`<div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name static-context">User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$plan</span> <span class="token operator">=</span> <span class="token class-name static-context">Plan</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">newSubscription</span><span class="token punctuation">(</span>
            <span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">,</span> <span class="token comment">// identifier tag of the subscription. If your application offers a single subscription, you might call this &#39;main&#39; or &#39;primary&#39;</span>
             <span class="token variable">$plan</span><span class="token punctuation">,</span> <span class="token comment">// Plan or PlanCombination instance your subscriber is subscribing to</span>
             <span class="token string single-quoted-string">&#39;Main subscription&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Human-readable name for your subscription</span>
             <span class="token string single-quoted-string">&#39;Customer main subscription&#39;</span><span class="token punctuation">,</span> <span class="token comment">// Description</span>
             <span class="token constant">null</span><span class="token punctuation">,</span> <span class="token comment">// Start date for the subscription, defaults to now()</span>
             <span class="token string single-quoted-string">&#39;free&#39;</span> <span class="token comment">// Payment method service defined in config</span>
             <span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="change-its-plan" tabindex="-1"><a class="header-anchor" href="#change-its-plan"><span>Change its Plan</span></a></h2><p>You can change subscription related plan easily as follows, method accepts either <code>Plan</code> or <code>PlanCombination</code>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$plan</span> <span class="token operator">=</span> <span class="token class-name static-context">Plan</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$subscription</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Change subscription plan clearing usage and synchronizing invoicing periods</span>
<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token function">changePlan</span><span class="token punctuation">(</span><span class="token variable">$plan</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Change subscription plan and keep usage</span>
<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token function">changePlan</span><span class="token punctuation">(</span><span class="token variable">$plan</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Change subscription plan, keep usage and invoicing data</span>
<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token function">changePlan</span><span class="token punctuation">(</span><span class="token variable">$plan</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Subscription usage data will be cleared by default, unless <code>false</code> is given as second parameter.</p><p>If you want the same billing frequency (<code>invoice_period</code> and <code>invoice_interval</code>) set third parameter to <code>true</code> and subscription will inherit plan&#39;s billing frequency. If you want to keep current subscription invoice intervals, set to <code>false</code>. By default, invoice details are synchronized with new plan.</p><ul><li>Plan change will adjust existing features to the ones in the new plan.</li><li>Change will also remove features attached to old plan.</li><li>Existent features that where previously attached without plan but exist in the new plan now will use plan values.</li><li>Features not attached to a plan and nonexistent in new plan will remain the same.</li></ul><h2 id="change-pricing-and-other-details" tabindex="-1"><a class="header-anchor" href="#change-pricing-and-other-details"><span>Change pricing and other details</span></a></h2><p>You can change the price or details without affecting attached features or plan. With this feature you can set prices individually for every subscriber.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$subscription</span> <span class="token operator">=</span> <span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token property">description</span> <span class="token operator">=</span> <span class="token string single-quoted-string">&#39;Main description with great discount&#39;</span><span class="token punctuation">;</span>
<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token property">price</span> <span class="token operator">=</span> <span class="token number">12</span><span class="token punctuation">;</span>

<span class="token variable">$subscription</span><span class="token operator">-&gt;</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="revert-custom-subscription-changes-resynchronize-to-plan" tabindex="-1"><a class="header-anchor" href="#revert-custom-subscription-changes-resynchronize-to-plan"><span>Revert custom subscription changes (resynchronize to plan)</span></a></h3><p>You can revert changes made to subscription with function <code>syncPlan</code>. Be careful if you are using a <code>PlanCombination</code>, synchronizing without specifying a plan will synchronize subscription with parent plan.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Synchronize price, invoicing and tier with parent plan</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">syncPlan</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Synchronize with parent plan and also features</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">syncPlan</span><span class="token punctuation">(</span><span class="token constant">null</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>syncPlan()</code> accepts 3 parameters.</p><ul><li>First parameter is a <code>Plan</code>, if you want to synchronize with current plan (default behaviour), set to <code>null</code>.</li><li>Second is <code>bool</code> for synchronizing also invoicing details (period and interval), default behaviour is to synchronize <code>true</code>.</li><li>Third one is <code>bool</code> to also synchronize features.</li></ul><h2 id="grace" tabindex="-1"><a class="header-anchor" href="#grace"><span>Grace</span></a></h2><p>Grace period is the extra time the subscription will be considered active after it has ended.</p><h3 id="grace-related-functions" tabindex="-1"><a class="header-anchor" href="#grace-related-functions"><span>Grace related functions</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasGrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns boolean indicating if subscription has grace period</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGraceTotalDurationIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns duration integer in set Carbon interval (second, day, month...)</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGraceStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns grace start date (a.k.a. subscription end date)</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGraceEndDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns grace end date</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGraceTotalDurationIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days grace lasts</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGracePeriodUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days of grace consumed</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getGracePeriodRemainingUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days until subscription grace ends</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasStartedGrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns boolean indicating if grace period is over</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasEndedGrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns boolean indicating if grace period is over</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subscriber-s-subscriptions" tabindex="-1"><a class="header-anchor" href="#subscriber-s-subscriptions"><span>Subscriber&#39;s subscriptions</span></a></h2><p>Retrieve subscriptions of subscriber.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Get user subscriptions</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">subscriptions</span><span class="token punctuation">;</span>

<span class="token comment">// Get user active subscriptions</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token property">activeSubscriptions</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subscriber-s-main-or-only-subscription" tabindex="-1"><a class="header-anchor" href="#subscriber-s-main-or-only-subscription"><span>Subscriber&#39;s main or only subscription</span></a></h2><p>Since usually projects work with only one subscription or one primary, you have to set the tag for it in the config <code>main_subscription_tag</code>.</p><p>If your user only has one subscription, <code>subscription()</code> will return the only one the subscriber has. If has more, it will fall to default. Default is <code>main</code>.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// config/subby.php</span>
<span class="token keyword">return</span> <span class="token punctuation">[</span>
    <span class="token string single-quoted-string">&#39;main_subscription_tag&#39;</span> <span class="token operator">=&gt;</span> <span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// This retrieves user&#39;s only one subscription or &#39;main&#39; from config:</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="subscription-feature-usage" tabindex="-1"><a class="header-anchor" href="#subscription-feature-usage"><span>Subscription Feature Usage</span></a></h2><p>You can determine the usage and ability of a particular feature in the subscriber&#39;s subscription with <code>canUseFeature</code>:</p><p>The <code>canUseFeature</code> method returns <code>true</code> or <code>false</code> depending on multiple factors:</p><ul><li>Subscription is active (on trial or currently in period).</li><li>Feature <em>is enabled</em> (<code>true</code>).</li><li>Feature value isn&#39;t <code>0</code>/<code>false</code>/<code>NULL</code>.</li><li>Feature has remaining uses available.</li></ul><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">canUseFeature</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;social_profiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Other feature methods on the user subscription instance are:</p><ul><li><code>getFeatureUsage</code>: returns how many times the user has used a particular feature.</li><li><code>getFeatureRemainings</code>: returns available uses for a particular feature.</li><li><code>getFeatureValue</code>: returns the feature value.</li></ul><p>All methods share the same signature: e.g. <code>$user-&gt;subscription(&#39;main&#39;)-&gt;getFeatureUsage(&#39;social_profiles&#39;);</code>.</p><h3 id="record-feature-usage" tabindex="-1"><a class="header-anchor" href="#record-feature-usage"><span>Record Feature Usage</span></a></h3><p>In order to effectively use the ability methods you will need to keep track of every usage of each feature (or at least those that require it). You may use the <code>recordFeatureUsage</code> method available through the user <code>subscription()</code> method:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">recordFeatureUsage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;social_profiles&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>When recording feature <code>canUseFeature</code> is already called within the function, so you do not have to check every time. <code>UsageDenied</code> Exception is thrown if subscriber cannot use the feature.</p><p>The <code>recordFeatureUsage</code> method accepts 3 parameters: the first one is the feature&#39;s tag, the second one is the quantity of uses to add (default is <code>1</code>), and the third one indicates if the addition should be incremental (default behavior), when disabled the usage will be overridden by the quantity provided.</p><details class="custom-container details"><summary>Click me to view example code</summary><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Increment by 1</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">recordFeatureUsage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;social_profiles&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Override with 3</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">recordFeatureUsage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;social_profiles&#39;</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="reduce-feature-usage" tabindex="-1"><a class="header-anchor" href="#reduce-feature-usage"><span>Reduce Feature Usage</span></a></h3><p>Reducing the feature usage is <em>almost</em> the same as incrementing it. Here we only <em>substract</em> a given quantity (default is <code>1</code>) to the actual usage:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">reduceFeatureUsage</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;social_profiles&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="clear-the-subscription-usage-data" tabindex="-1"><a class="header-anchor" href="#clear-the-subscription-usage-data"><span>Clear the Subscription Usage data</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">usage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="check-subscription-status" tabindex="-1"><a class="header-anchor" href="#check-subscription-status"><span>Check Subscription status</span></a></h2><p>For a subscription to be considered active one of the following must be <code>true</code>:</p><ul><li>Subscription has an active trial.</li><li>Subscription <code>ends_at</code> is in the future.</li></ul><p>Alternatively you can use the following methods available in the subscription model:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isCanceled</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasEnded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">hasEndedTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isOnTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// To know if subscription has the same values as related plan or has been changed</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isAltered</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="remaining-price-prorate" tabindex="-1"><a class="header-anchor" href="#remaining-price-prorate"><span>Remaining price prorate</span></a></h3><p>You can get the remaining prorated amount until subscription invoice period ends.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSubscriptionRemainingUsagePriceProrate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Ex: 10 day subscription of price 10.00, on day 6, returns 4</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="trial-period-time-related-functions" tabindex="-1"><a class="header-anchor" href="#trial-period-time-related-functions"><span>Trial period time related functions</span></a></h3><p>You can get some information about duration in your trial with:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTrialStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// When did the trial start</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTrialTotalDurationIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days trial lasts</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTrialPeriodUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days of trial consumed</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getTrialPeriodRemainingUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days until subscription trial ends</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use Carbon accepted intervals (in singular): <code>year</code>,<code>month</code>,<code>day</code>,<code>hour</code>,<code>minute</code>,<code>second</code>,<code>microsecond</code>...</p><h3 id="subscription-period-time-related-functions" tabindex="-1"><a class="header-anchor" href="#subscription-period-time-related-functions"><span>Subscription period time related functions</span></a></h3><p>You can get some information about duration in your subscription with:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSubscriptionTotalDurationIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days subscription lasts</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSubscriptionPeriodUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days of subscription consumed</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">getSubscriptionPeriodRemainingUsageIn</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;day&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Returns number of days until subscription ends</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can use Carbon accepted intervals (in singular): <code>year</code>,<code>month</code>,<code>day</code>,<code>hour</code>,<code>minute</code>,<code>second</code>,<code>microsecond</code>...</p><h2 id="revert-overridden-plan-subscription-features" tabindex="-1"><a class="header-anchor" href="#revert-overridden-plan-subscription-features"><span>Revert overridden plan subscription features</span></a></h2><p>You can revert all feature changes made to subscription that are related to a plan.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Resynchronize features</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">syncPlanFeatures</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Now all plan features available in subscription&#39;s related plan will be reset in subscription feature. If your subscriber has attached manually a feature that was not previously available in plan, but now is, your custom subscription feature will be related to plan feature and will be overridden with plan&#39;s feature details in this synchronization.</p><h3 id="other" tabindex="-1"><a class="header-anchor" href="#other"><span>Other</span></a></h3><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Check if subscription is free</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">isFree</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Check subscriber to plan</span>
<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">isSubscribedTo</span><span class="token punctuation">(</span><span class="token variable">$planId</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Canceled subscriptions with an active trial or <code>ends_at</code> in the future are considered active.</p><h2 id="renew-a-subscription" tabindex="-1"><a class="header-anchor" href="#renew-a-subscription"><span>Renew a Subscription</span></a></h2><p>To renew a subscription you may use the <code>renew</code> method available in the subscription model. This will set a new <code>ends_at</code> date based on the selected plan.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">renew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">renew</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// This will triple the periods. CAUTION: If your subscription is 2 &#39;month&#39;, you&#39;ll get 6 &#39;month&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Canceled subscriptions can&#39;t be renewed. Renewing a subscription with trial period ends it.</p><p>When a subscription has already ended time ago and now is renewed, period will be set as if subscription started today, but when a subscription is still ongoing and renewed, start date is kept and end date is extended by the amount of periods specified.</p><h2 id="cancel-a-subscription" tabindex="-1"><a class="header-anchor" href="#cancel-a-subscription"><span>Cancel a Subscription</span></a></h2><p>To cancel a subscription, simply use the <code>cancel</code> method on the user&#39;s subscription:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="immediately" tabindex="-1"><a class="header-anchor" href="#immediately"><span>Immediately</span></a></h3><p>By default the subscription will remain active until the end of the period, you may pass <code>true</code> to end the subscription <em>immediately</em>:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="fallback-plan" tabindex="-1"><a class="header-anchor" href="#fallback-plan"><span>Fallback plan</span></a></h3><p>If a <code>fallback_plan_tag</code> is not <code>null</code> in config, when <code>cancel</code> is called, subscription will not be canceled but changed to fallback plan.</p><p>To cancel subscription and ignore fallback, a second parameter is available on <code>cancel</code> method:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">cancel</span><span class="token punctuation">(</span><span class="token constant boolean">false</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="uncancel-a-subscription" tabindex="-1"><a class="header-anchor" href="#uncancel-a-subscription"><span>Uncancel a subscription</span></a></h2><p>To uncancel a subscription, simply use the <code>uncancel</code> method on the user&#39;s subscription:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token variable">$user</span><span class="token operator">-&gt;</span><span class="token function">subscription</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;main&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">uncancel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="scopes" tabindex="-1"><a class="header-anchor" href="#scopes"><span>Scopes</span></a></h2><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">// Get subscriptions by plan</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">byPlanId</span><span class="token punctuation">(</span><span class="token variable">$planId</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get bookings of the given user</span>
<span class="token variable">$user</span> <span class="token operator">=</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>App<span class="token punctuation">\\</span>Models<span class="token punctuation">\\</span>User</span><span class="token operator">::</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$bookingsOfUser</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">ofSubscriber</span><span class="token punctuation">(</span><span class="token variable">$user</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 

<span class="token comment">// Get subscriptions with trial ending in 3 days</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">findEndingTrial</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get subscriptions with ended trial</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">findEndedTrial</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get subscriptions with period ending in 3 days</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">findEndingPeriod</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get subscriptions with ended period</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">findEndedPeriod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Get subscriptions with period ending in 3 days filtered by the subscription tag</span>
<span class="token variable">$subscriptions</span> <span class="token operator">=</span> <span class="token class-name static-context">PlanSubscription</span><span class="token operator">::</span><span class="token function">getByTag</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;company&#39;</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">findEndingPeriod</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,90);function m(h,v){const t=p("router-link"),o=p("RouteLink");return r(),l("div",null,[d,n("nav",k,[n("ul",null,[n("li",null,[a(t,{to:"#create-a-subscription"},{default:e(()=>[s("Create a Subscription")]),_:1})]),n("li",null,[a(t,{to:"#change-its-plan"},{default:e(()=>[s("Change its Plan")]),_:1})]),n("li",null,[a(t,{to:"#change-pricing-and-other-details"},{default:e(()=>[s("Change pricing and other details")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#revert-custom-subscription-changes-resynchronize-to-plan"},{default:e(()=>[s("Revert custom subscription changes (resynchronize to plan)")]),_:1})])])]),n("li",null,[a(t,{to:"#grace"},{default:e(()=>[s("Grace")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#grace-related-functions"},{default:e(()=>[s("Grace related functions")]),_:1})])])]),n("li",null,[a(t,{to:"#subscriber-s-subscriptions"},{default:e(()=>[s("Subscriber's subscriptions")]),_:1})]),n("li",null,[a(t,{to:"#subscriber-s-main-or-only-subscription"},{default:e(()=>[s("Subscriber's main or only subscription")]),_:1})]),n("li",null,[a(t,{to:"#subscription-feature-usage"},{default:e(()=>[s("Subscription Feature Usage")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#record-feature-usage"},{default:e(()=>[s("Record Feature Usage")]),_:1})]),n("li",null,[a(t,{to:"#reduce-feature-usage"},{default:e(()=>[s("Reduce Feature Usage")]),_:1})]),n("li",null,[a(t,{to:"#clear-the-subscription-usage-data"},{default:e(()=>[s("Clear the Subscription Usage data")]),_:1})])])]),n("li",null,[a(t,{to:"#check-subscription-status"},{default:e(()=>[s("Check Subscription status")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#remaining-price-prorate"},{default:e(()=>[s("Remaining price prorate")]),_:1})]),n("li",null,[a(t,{to:"#trial-period-time-related-functions"},{default:e(()=>[s("Trial period time related functions")]),_:1})]),n("li",null,[a(t,{to:"#subscription-period-time-related-functions"},{default:e(()=>[s("Subscription period time related functions")]),_:1})])])]),n("li",null,[a(t,{to:"#revert-overridden-plan-subscription-features"},{default:e(()=>[s("Revert overridden plan subscription features")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#other"},{default:e(()=>[s("Other")]),_:1})])])]),n("li",null,[a(t,{to:"#renew-a-subscription"},{default:e(()=>[s("Renew a Subscription")]),_:1})]),n("li",null,[a(t,{to:"#cancel-a-subscription"},{default:e(()=>[s("Cancel a Subscription")]),_:1}),n("ul",null,[n("li",null,[a(t,{to:"#immediately"},{default:e(()=>[s("Immediately")]),_:1})]),n("li",null,[a(t,{to:"#fallback-plan"},{default:e(()=>[s("Fallback plan")]),_:1})])])]),n("li",null,[a(t,{to:"#uncancel-a-subscription"},{default:e(()=>[s("Uncancel a subscription")]),_:1})]),n("li",null,[a(t,{to:"#scopes"},{default:e(()=>[s("Scopes")]),_:1})])])]),b,n("p",null,[s(`If related plan is modified in the future, subscriber's subscription stays as it was, price, invoicing and features are "frozen" unless `),a(o,{to:"/v6.x/models/plan-subscription-model.html#revert-overridden-plan-subscription-features"},{default:e(()=>[s("manually synchronized")]),_:1}),s(" with related plan.")]),g])}const y=c(u,[["render",m],["__file","plan-subscription-model.html.vue"]]),w=JSON.parse(`{"path":"/v6.x/models/plan-subscription-model.html","title":"Plan Subscription Model","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Create a Subscription","slug":"create-a-subscription","link":"#create-a-subscription","children":[]},{"level":2,"title":"Change its Plan","slug":"change-its-plan","link":"#change-its-plan","children":[]},{"level":2,"title":"Change pricing and other details","slug":"change-pricing-and-other-details","link":"#change-pricing-and-other-details","children":[{"level":3,"title":"Revert custom subscription changes (resynchronize to plan)","slug":"revert-custom-subscription-changes-resynchronize-to-plan","link":"#revert-custom-subscription-changes-resynchronize-to-plan","children":[]}]},{"level":2,"title":"Grace","slug":"grace","link":"#grace","children":[{"level":3,"title":"Grace related functions","slug":"grace-related-functions","link":"#grace-related-functions","children":[]}]},{"level":2,"title":"Subscriber's subscriptions","slug":"subscriber-s-subscriptions","link":"#subscriber-s-subscriptions","children":[]},{"level":2,"title":"Subscriber's main or only subscription","slug":"subscriber-s-main-or-only-subscription","link":"#subscriber-s-main-or-only-subscription","children":[]},{"level":2,"title":"Subscription Feature Usage","slug":"subscription-feature-usage","link":"#subscription-feature-usage","children":[{"level":3,"title":"Record Feature Usage","slug":"record-feature-usage","link":"#record-feature-usage","children":[]},{"level":3,"title":"Reduce Feature Usage","slug":"reduce-feature-usage","link":"#reduce-feature-usage","children":[]},{"level":3,"title":"Clear the Subscription Usage data","slug":"clear-the-subscription-usage-data","link":"#clear-the-subscription-usage-data","children":[]}]},{"level":2,"title":"Check Subscription status","slug":"check-subscription-status","link":"#check-subscription-status","children":[{"level":3,"title":"Remaining price prorate","slug":"remaining-price-prorate","link":"#remaining-price-prorate","children":[]},{"level":3,"title":"Trial period time related functions","slug":"trial-period-time-related-functions","link":"#trial-period-time-related-functions","children":[]},{"level":3,"title":"Subscription period time related functions","slug":"subscription-period-time-related-functions","link":"#subscription-period-time-related-functions","children":[]}]},{"level":2,"title":"Revert overridden plan subscription features","slug":"revert-overridden-plan-subscription-features","link":"#revert-overridden-plan-subscription-features","children":[{"level":3,"title":"Other","slug":"other","link":"#other","children":[]}]},{"level":2,"title":"Renew a Subscription","slug":"renew-a-subscription","link":"#renew-a-subscription","children":[]},{"level":2,"title":"Cancel a Subscription","slug":"cancel-a-subscription","link":"#cancel-a-subscription","children":[{"level":3,"title":"Immediately","slug":"immediately","link":"#immediately","children":[]},{"level":3,"title":"Fallback plan","slug":"fallback-plan","link":"#fallback-plan","children":[]}]},{"level":2,"title":"Uncancel a subscription","slug":"uncancel-a-subscription","link":"#uncancel-a-subscription","children":[]},{"level":2,"title":"Scopes","slug":"scopes","link":"#scopes","children":[]}],"git":{"updatedTime":1645309498000,"contributors":[{"name":"Borja Puig","email":"bdpuig@gmail.com","commits":1}]},"filePathRelative":"v6.x/models/plan-subscription-model.md"}`);export{y as comp,w as data};
