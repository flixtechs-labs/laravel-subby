import{_ as p,r as c,c as o,a as n,d as a,w as e,b as i,o as l,e as t}from"./app-Vnr7Qnzh.js";const r={},u=n("h1",{id:"payment-services",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#payment-services"},[n("span",null,"Payment services")])],-1),d={class:"table-of-contents"},k=i(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>A payment service is a class that processes the payment defined in the subscription column <code>payment_method</code>.</p><h2 id="create-a-payment-service" tabindex="-1"><a class="header-anchor" href="#create-a-payment-service"><span>Create a payment service</span></a></h2><h3 id="create-the-service" tabindex="-1"><a class="header-anchor" href="#create-the-service"><span>Create the service</span></a></h3><p>Create a new laravel class in your project and implement <code>Flixtechs\\Subby\\Contracts\\PaymentMethodService</code>. Looking at the <code>Free</code> service would be a good starting point.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>PaymentMethods</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>PaymentMethodService</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">Free</span> <span class="token keyword">implements</span> <span class="token class-name">PaymentMethodService</span>
<span class="token punctuation">{</span>
    <span class="token doc-comment comment">/**
     * Charge desired amount
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">charge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// Nothing is charged, no exception is raised</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="create-your-methods" tabindex="-1"><a class="header-anchor" href="#create-your-methods"><span>Create your methods</span></a></h4><p>In the following code, see an example of what could be a payment method service for a fictional credit card payment processor.</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">declare</span><span class="token punctuation">(</span>strict_types<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token package">PaymentMethods</span><span class="token punctuation">;</span>

<span class="token keyword">use</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Contracts<span class="token punctuation">\\</span>PaymentMethodService</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Bank<span class="token punctuation">\\</span>BankPackages<span class="token punctuation">\\</span>YourPaymentProcessor</span><span class="token punctuation">;</span>
<span class="token keyword">use</span> <span class="token package">Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Traits<span class="token punctuation">\\</span>IsPaymentMethod</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name-definition class-name">CreditCard</span> <span class="token keyword">implements</span> <span class="token class-name">PaymentMethodService</span>
<span class="token punctuation">{</span>
    <span class="token keyword">use</span> <span class="token package">IsPaymentMethod</span><span class="token punctuation">;</span>

    <span class="token keyword">private</span> <span class="token variable">$amount</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token variable">$currency</span><span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token variable">$creditCard</span><span class="token punctuation">;</span>

    <span class="token doc-comment comment">/**
     * You would need to retrieve whatever data you need from $this-&gt;subscription relationships
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">private</span> <span class="token keyword">function</span> <span class="token function-definition function">retrieveCreditCard</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
       <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">creditCard</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">subscription</span><span class="token operator">-&gt;</span><span class="token property">user</span><span class="token operator">-&gt;</span><span class="token function">creditCards</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token property">default</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token doc-comment comment">/**
     * Charge desired amount with your favorite bank
     * <span class="token keyword">@return</span> <span class="token class-name"><span class="token keyword">void</span></span>
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">charge</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token variable">$processor</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">YourPaymentProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$processor</span><span class="token operator">-&gt;</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;MERCHANT_CURRENCY&#39;</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">currency</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$processor</span><span class="token operator">-&gt;</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;MERCHANT_AMOUNT&#39;</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$processor</span><span class="token operator">-&gt;</span><span class="token function">setParameter</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;MERCHANT_CARD&#39;</span><span class="token punctuation">,</span> <span class="token variable">$this</span><span class="token operator">-&gt;</span><span class="token property">creditCard</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token variable">$processor</span><span class="token operator">-&gt;</span><span class="token function">pay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="make-the-service-available" tabindex="-1"><a class="header-anchor" href="#make-the-service-available"><span>Make the service available</span></a></h3><p>In your config file, add a name and the path of your new payment method:</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token string single-quoted-string">&#39;services&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
        <span class="token string single-quoted-string">&#39;schedule&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>ScheduleService</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;renewal&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>RenewalService</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token string single-quoted-string">&#39;payment_methods&#39;</span> <span class="token operator">=&gt;</span> <span class="token punctuation">[</span>
            <span class="token string single-quoted-string">&#39;free&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>Flixtechs<span class="token punctuation">\\</span>Subby<span class="token punctuation">\\</span>Services<span class="token punctuation">\\</span>PaymentMethods<span class="token punctuation">\\</span>Free</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token string single-quoted-string">&#39;credit_card&#39;</span> <span class="token operator">=&gt;</span> <span class="token class-name class-name-fully-qualified static-context"><span class="token punctuation">\\</span>PaymentMethods<span class="token punctuation">\\</span>CreditCard</span><span class="token operator">::</span><span class="token keyword">class</span><span class="token punctuation">,</span>
        <span class="token punctuation">]</span>
<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function v(m,h){const s=c("router-link");return l(),o("div",null,[u,n("nav",d,[n("ul",null,[n("li",null,[a(s,{to:"#usage"},{default:e(()=>[t("Usage")]),_:1})]),n("li",null,[a(s,{to:"#create-a-payment-service"},{default:e(()=>[t("Create a payment service")]),_:1}),n("ul",null,[n("li",null,[a(s,{to:"#create-the-service"},{default:e(()=>[t("Create the service")]),_:1})]),n("li",null,[a(s,{to:"#make-the-service-available"},{default:e(()=>[t("Make the service available")]),_:1})])])])])]),k])}const y=p(r,[["render",v],["__file","payment-services.html.vue"]]),g=JSON.parse('{"path":"/v6.x/payments/payment-services.html","title":"Payment services","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[]},{"level":2,"title":"Create a payment service","slug":"create-a-payment-service","link":"#create-a-payment-service","children":[{"level":3,"title":"Create the service","slug":"create-the-service","link":"#create-the-service","children":[]},{"level":3,"title":"Make the service available","slug":"make-the-service-available","link":"#make-the-service-available","children":[]}]}],"git":{"updatedTime":1716242914000,"contributors":[{"name":"Borja Puig","email":"bdpuig@gmail.com","commits":1},{"name":"Given Ncube","email":"givenyslim12@gmail.com","commits":1}]},"filePathRelative":"v6.x/payments/payment-services.md"}');export{y as comp,g as data};
